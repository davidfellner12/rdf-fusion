name: Artifacts

on:
  push:
    branches:
      - main
      - next
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  binary_linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup-rust
        with:
          target: aarch64-unknown-linux-gnu
      - run: |
          sudo apt-get update && sudo apt-get install -y g++-aarch64-linux-gnu
          mkdir .cargo
          echo -e "[target.aarch64-unknown-linux-gnu]\nlinker = \"aarch64-linux-gnu-gcc\"" >> .cargo/config.toml
      - run: cargo build --release --no-default-features --features rustls-native,geosparql
        working-directory: ./cli
      - run: cargo build --release --target aarch64-unknown-linux-gnu --no-default-features --features rustls-native,geosparql
        working-directory: ./cli
        env:
          BINDGEN_EXTRA_CLANG_ARGS: --sysroot /usr/aarch64-linux-gnu
      - uses: actions/upload-artifact@v4
        with:
          name: oxigraph_x86_64_linux_gnu
          path: target/release/oxigraph
      - uses: actions/upload-artifact@v4
        with:
          name: oxigraph_aarch64_linux_gnu
          path: target/aarch64-unknown-linux-gnu/release/oxigraph
      - run: mv target/release/oxigraph oxigraph_${{ github.event.release.tag_name }}_x86_64_linux_gnu
        if: github.event_name == 'release'
      - run: mv target/aarch64-unknown-linux-gnu/release/oxigraph oxigraph_${{ github.event.release.tag_name }}_aarch64_linux_gnu
        if: github.event_name == 'release'
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            oxigraph_${{ github.event.release.tag_name }}_x86_64_linux_gnu
            oxigraph_${{ github.event.release.tag_name }}_aarch64_linux_gnu
        if: github.event_name == 'release'

  binary_mac:
    runs-on: macos-latest
    env:
      DEVELOPER_DIR: '/Applications/Xcode.app/Contents/Developer'
      SDKROOT: '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk'
      MACOSX_DEPLOYMENT_TARGET: '10.14'
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup-rust
        with:
          target: x86_64-apple-darwin
      - run: cargo build --release --target x86_64-apple-darwin
        working-directory: ./cli
      - run: cargo build --release --target aarch64-apple-darwin
        working-directory: ./cli
      - uses: actions/upload-artifact@v4
        with:
          name: oxigraph_x86_64_apple
          path: target/x86_64-apple-darwin/release/oxigraph
      - uses: actions/upload-artifact@v4
        with:
          name: oxigraph_aarch64_apple
          path: target/aarch64-apple-darwin/release/oxigraph
      - run: mv target/x86_64-apple-darwin/release/oxigraph oxigraph_${{ github.event.release.tag_name }}_x86_64_apple
        if: github.event_name == 'release'
      - run: mv target/aarch64-apple-darwin/release/oxigraph oxigraph_${{ github.event.release.tag_name }}_aarch64_apple
        if: github.event_name == 'release'
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            oxigraph_${{ github.event.release.tag_name }}_x86_64_apple
            oxigraph_${{ github.event.release.tag_name }}_aarch64_apple
        if: github.event_name == 'release'

  binary_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup-rust
      - run: Remove-Item -LiteralPath "C:\msys64\" -Force -Recurse
      - run: cargo build --release
        working-directory: ./cli
      - uses: actions/upload-artifact@v4
        with:
          name: oxigraph_x86_64_windows_msvc
          path: target/release/oxigraph.exe
      - run: mv target/release/oxigraph.exe oxigraph_${{ github.event.release.tag_name }}_x86_64_windows_msvc.exe
        if: github.event_name == 'release'
      - uses: softprops/action-gh-release@v2
        with:
          files: oxigraph_${{ github.event.release.tag_name }}_x86_64_windows_msvc.exe
        if: github.event_name == 'release'

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: github.event_name == 'release'
      - uses: docker/metadata-action@v5
        id: docker_meta
        with:
          images: |
            ${{ github.repository }},enable=${{ github.event_name == 'release' }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: server/Dockerfile
          platforms: linux/amd64,linux/arm64
          pull: true
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish_crates:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: rustup update
      - run: cargo login $CRATES_IO_TOKEN
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      - run: cargo publish
        working-directory: ./oxrocksdb-sys
        continue-on-error: true
      - run: cargo publish
        working-directory: ./lib/oxsdatatypes
        continue-on-error: true
      - run: cargo publish
        working-directory: ./lib/oxrdf
        continue-on-error: true
      - run: cargo publish
        working-directory: ./lib/oxrdfxml
        continue-on-error: true
      - run: cargo publish
        working-directory: ./lib/oxttl
        continue-on-error: true
      - run: cargo publish
        working-directory: ./lib/oxrdfio
        continue-on-error: true
      - run: cargo publish
        working-directory: ./lib/sparesults
        continue-on-error: true
      - run: cargo publish
        working-directory: ./lib/spargebra
        continue-on-error: true
      - run: cargo publish
        working-directory: ./lib/sparopt
        continue-on-error: true
      - run: cargo publish
        working-directory: ./lib/sparql-smith
        continue-on-error: true
      - run: cargo publish
        working-directory: ./lib/oxigraph
        continue-on-error: true
      - run: cargo publish
        working-directory: ./lib/spargeo
        continue-on-error: true
      - run: cargo publish
        working-directory: ./cli

  homebrew:
    if: "github.event_name == 'release' && !contains('-', github.event.release.tag_name)"
    runs-on: ubuntu-latest
    needs: full_archive
    steps:
      - uses: actions/checkout@v4
        with:
          repository: oxigraph/homebrew-oxigraph
          token: ${{ secrets.FULL_ACCESS_TOKEN }}
      - run: |
          wget "https://github.com/oxigraph/oxigraph/releases/download/${{ github.event.release.tag_name }}/oxigraph_${{ github.event.release.tag_name }}.tar.gz"
          SHA=`shasum -a 256 "oxigraph_${{ github.event.release.tag_name }}.tar.gz" | awk '{ print $1 }'`
          rm "oxigraph_${{ github.event.release.tag_name }}.tar.gz"
          sed -i "s/download\/.*\.tar/download\/${{ github.event.release.tag_name }}\/oxigraph_${{ github.event.release.tag_name }}.tar/g" Formula/oxigraph.rb
          sed -i "s/sha256 \".*\"/sha256 \"$SHA\"/g" Formula/oxigraph.rb
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git diff-index --quiet HEAD || git commit -m "Upgrades to ${{ github.event.release.tag_name }}"
          git push

  full_archive:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: |
          rm -rf .git bench fuzz
          zip -r oxigraph_${{ github.event.release.tag_name }}.zip .
          tar -czf /tmp/oxigraph_${{ github.event.release.tag_name }}.tar.gz .
          mv /tmp/oxigraph_${{ github.event.release.tag_name }}.tar.gz .
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            oxigraph_${{ github.event.release.tag_name }}.zip
            oxigraph_${{ github.event.release.tag_name }}.tar.gz
